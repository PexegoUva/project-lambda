apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'jacoco'
apply plugin: 'shot'

jacoco {
    toolVersion = "$jacoco_version"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task detektLint(type: io.gitlab.arturbosch.detekt.Detekt) {
    description = "Running detekt and ktlint"
    failFast = true
    buildUponDefaultConfig = true
    source = files("app/src/main/java")
    include '**/*.kt'
    include '**/*.kts'
    exclude 'resources/'
    exclude 'build/'

    reports {
        xml.enabled = false
        html.enabled = false
        txt.enabled = false
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/*$ViewBinder*.*',
                      '**/*$InjectAdapter*.*',
                      '**/*Injector*.*',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      '**/ProjectLambdaApplication',
                      '**/CiMattersApplication*.*',
                      'android/**/*.*'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom files([mainSrc])
    classDirectories.setFrom files([debugTree])
    executionData.setFrom files(fileTree(dir: "$project.buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code_coverage/debugAndroidTest/connected/**/*.ec"
    ]))
}

task printVersionName {
    doLast {
        println "v" + android.defaultConfig.versionName
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.pexegouva.projectlambda"
        minSdkVersion 24
        targetSdkVersion 28

        // Manifest version information!
        def versionMajor = 0
        def versionMinor = 1
        def versionPatch = 0
        def versionBuild = 'debug'

        versionCode = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100
        versionName = "${versionMajor}.${versionMinor}.${versionPatch}"

        // It must be behind Android versioning.
        if (versionBuild != 0) {
            versionName += "-${versionBuild}"
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.karumi.shot.ShotTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
}

def koin_version = "2.0.1"
def espresso_version = "3.2.0"
def mockito_version = "2.7.22"
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-ext:$koin_version"

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'org.amshove.kluent:kluent:1.61'
    testImplementation "org.koin:koin-test:$koin_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso_version") {
        exclude group: 'javax.inject', module: 'javax.inject'
        exclude group: 'com.squareup', module: 'javawriter'
    }
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espresso_version") {
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
    }
    androidTestImplementation("com.android.support.test.espresso:espresso-intents:$espresso_version")
}
